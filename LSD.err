

====================> NEW TCL SESSION

(04/23/21 16:47:22)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(04/23/21 16:47:22)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(04/23/21 16:47:23)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----

(04/23/21 16:49:02)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(04/23/21 16:49:02)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(04/23/21 16:49:02)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----


====================> NEW TCL SESSION

(04/23/21 21:43:41)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(04/23/21 21:43:41)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(04/23/21 21:43:41)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----


====================> NEW TCL SESSION

(04/24/21 16:09:02)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(04/24/21 16:09:03)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(04/24/21 16:09:03)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----


====================> NEW TCL SESSION

(04/26/21 21:26:59)
Command:
if [ string equal $pltSavFmt eps ] { 					$daptab.tab$a.c.f.plots postscript -x $x0 -y $y0 -width [ expr { $x1 - $x0 } ] -height [ expr { $y1 - $y0 } ] -pagewidth $dd -rotate $pltSavRes -colormode $pltSavCmod -file "$fn" 				} else { 					canvas2svg $daptab.tab$a.c.f.plots "$fn" "$x0 $y0 $x1 $y1" $pltSavCmod %s 				}
Message:
Invalid canvas window or file
-----

(04/26/21 21:28:12)
Command:
if [ string equal $pltSavFmt eps ] { 					$daptab.tab$a.c.f.plots postscript -x $x0 -y $y0 -width [ expr { $x1 - $x0 } ] -height [ expr { $y1 - $y0 } ] -pagewidth $dd -rotate $pltSavRes -colormode $pltSavCmod -file "$fn" 				} else { 					canvas2svg $daptab.tab$a.c.f.plots "$fn" "$x0 $y0 $x1 $y1" $pltSavCmod %s 				}
Message:
Invalid canvas window or file
-----

(04/26/21 21:28:36)
Command:
if [ string equal $pltSavFmt eps ] { 					$daptab.tab$a.c.f.plots postscript -x $x0 -y $y0 -width [ expr { $x1 - $x0 } ] -height [ expr { $y1 - $y0 } ] -pagewidth $dd -rotate $pltSavRes -colormode $pltSavCmod -file "$fn" 				} else { 					canvas2svg $daptab.tab$a.c.f.plots "$fn" "$x0 $y0 $x1 $y1" $pltSavCmod %s 				}
Message:
Invalid canvas window or file
-----


====================> NEW TCL SESSION

(04/29/21 18:09:54)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(04/29/21 18:09:54)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(04/29/21 18:09:54)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----


====================> NEW TCL SESSION

(05/05/21 14:57:05)
Command:
if { ! [ winfo exists .deb.tit ] } { 			set fntSz [ expr { [ font metrics [ ttk::style lookup boldSmall.TLabel -font ] - linespace ] + 2 } ]; 			ttk::frame .deb.tit -height [ expr { $fntSz + $vspcszD } ]; 			ttk::label .deb.tit.name1 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val1 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last1 -style boldSmall.TLabel -text "Updated"; 			ttk::label .deb.tit.pad -style boldSmall.TLabel; 			ttk::label .deb.tit.name2 -style boldSmall.TLabel -text Variable -anchor w; 			ttk::label .deb.tit.val2 -style hlBoldSmall.TLabel -text Value; 			ttk::label .deb.tit.last2 -style boldSmall.TLabel -text "Updated"; 			placeline { .deb.tit.name1 .deb.tit.val1 .deb.tit.last1 .deb.tit.pad .deb.tit.name2 .deb.tit.val2 .deb.tit.last2 } [ list $hnamshD $hvalshD $hupdshD $hpadshD $hnamshD $hvalshD $hupdshD ] 0 $fntSz; 			pack .deb.tit -anchor w -fill x -after .deb.v 		}
Message:
wrong # args: should be "font metrics font ?-displayof window? ?option?"
-----

(05/05/21 14:57:05)
Command:
if [ winfo exists .deb.cc ] { 			$g.can delete all; 			if { ! %d } { 				$g.can yview moveto 0; 				unset -nocomplain lstDebPos 			} 		} { 			ttk::frame .deb.cc; 			ttk::frame $g; 			grid $g; 			grid rowconfigure $g 0 -weight 1; 			grid columnconfigure $g 0 -weight 1; 			grid propagate $g 0; 			set lastDebSz { 0 0 }; 			set debDone 0; 			set fntWid [ font measure [ ttk::style lookup TLabel -font active TkDefaultFont ] 0 ]; 			set hcharszD [ expr { int( ( $hsizeDmin - 15 ) / $fntWid ) } ]; 			set hnamszD [ expr { round( $hnamshD * $hcharszD ) } ]; 			set hvalszD [ expr { round( $hvalshD * $hcharszD ) } ]; 			set hupdszD [ expr { round( $hupdshD * $hcharszD ) } ]; 			set hpadszD [ expr { round( $hpadshD * $hcharszD ) - 1 } ]; 			ttk::canvas $g.can -yscrollcommand { .deb.cc.grid.scroll set } -entry 0 -dark $darkTheme; 			ttk::scrollbar $g.scroll -command { .deb.cc.grid.can yview }; 			grid $g.can $g.scroll -sticky nsew; 			mouse_wheel $g.can; 			pack .deb.cc -anchor w -expand 1 -fill both -after .deb.tit; 			bind .deb <Configure> { 				if { ! [ info exists debConfRun ] } { 					set debConfRun 1; 					set debSz [ list [ winfo width .deb ] [ winfo height .deb ] ]; 					if { $debSz != $lastDebSz || ( $debDone == 1 && ! [ info exists debButHgt ] ) } { 						update idletasks; 						set lastDebSz $debSz; 						set canBbox [ $g.can bbox all ]; 						if { $debDone == 1 } { 							set desWid [ winfo width .deb.cc ]; 							set desHgt [ winfo height .deb.cc ]; 							if { ! [ info exists debButHgt ] } { 								set debButHgt [ expr { [ lindex $debSz 1 ] - $desHgt } ]; 							} elseif { $debButHgt > [ expr { [ lindex $debSz 1 ] - $desHgt } ] } { 								set desHgt [ expr { [ lindex $debSz 1 ] - $debButHgt } ] 							}; 							$g configure -width $desWid -height $desHgt; 							$g.can configure -scrollregion $canBbox 						} { 							set desWid [ expr { max( [ lindex $canBbox 2 ] - [ lindex $canBbox 0 ], 400 ) } ]; 							set desHgt [ expr { max( [ lindex $canBbox 3 ] - [ lindex $canBbox 1 ], 250 ) } ]; 							unset -nocomplain debButHgt 						}; 					} elseif { $debDone == 2 } { 						set debDone 1; 						$g.can configure -scrollregion [ $g.can bbox all ] 					}; 					unset debConfRun 				} 			} 		}
Message:
bad window path name ".deb.tit"
-----

(05/05/21 14:57:05)
Command:
pack .deb.b -padx $butPad -pady $butPad -side right -after .deb.cc
Message:
window ".deb.cc" isn't packed
-----


====================> NEW TCL SESSION

(05/12/21 17:34:01)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----

(05/12/21 17:34:19)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----

(05/12/21 17:34:24)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----

(05/12/21 17:34:38)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----


====================> NEW TCL SESSION

(05/13/21 02:50:07)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----


====================> NEW TCL SESSION

(05/22/21 21:14:52)
Command:
progressbox .da.pas "Add Series" "Creating MC Series" "Series" %d { set stop true } .da
Message:
divide by zero
-----


====================> NEW TCL SESSION

(07/18/22 10:42:12)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 10:42:12)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
newtop $list "Used In" "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::frame $list.lf 
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::label $list.lf.l1 -text "Equations using"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::label $list.lf.l2 -style hl.TLabel -text "%s"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
pack $list.lf.l1 $list.lf.l2
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::frame $list.l
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::scrollbar $list.l.v_scroll -command "$list.l.l yview"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::listbox $list.l.l -width 25 -selectmode single -yscroll "$list.l.v_scroll set" -dark $darkTheme
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
pack $list.l.l  $list.l.v_scroll -side left -fill y
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
mouse_wheel $list.l.l
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
bind $list.l.l <Home> "selectinlist $list.l.l 0; break"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
bind $list.l.l <End> "selectinlist $list.l.l end; break"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
ttk::label $list.l3 -justify center -text "(double-click to
observe the element)"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
pack $list.lf $list.l $list.l3 -padx 5 -pady 5 -expand yes -fill both
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
done $list b "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
bind $list <Double-Button-1> { set bidi [ selection get ]; set done 8; set choice 55 }
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
showtop $list
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:12)
Command:
mousewarpto $list.b.ok
Message:
can't read "list": no such variable
-----

(07/18/22 10:42:24)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 10:42:24)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(07/18/22 10:44:27)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 10:44:27)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
newtop $list "Used In" "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::frame $list.lf 
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::label $list.lf.l1 -text "Equations using"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::label $list.lf.l2 -style hl.TLabel -text "%s"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
pack $list.lf.l1 $list.lf.l2
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::frame $list.l
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::scrollbar $list.l.v_scroll -command "$list.l.l yview"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::listbox $list.l.l -width 25 -selectmode single -yscroll "$list.l.v_scroll set" -dark $darkTheme
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
pack $list.l.l  $list.l.v_scroll -side left -fill y
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
mouse_wheel $list.l.l
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
bind $list.l.l <Home> "selectinlist $list.l.l 0; break"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
bind $list.l.l <End> "selectinlist $list.l.l end; break"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
ttk::label $list.l3 -justify center -text "(double-click to
observe the element)"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
pack $list.lf $list.l $list.l3 -padx 5 -pady 5 -expand yes -fill both
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
done $list b "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
$list.l.l insert end "(never used)"
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
showtop $list
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:27)
Command:
mousewarpto $list.b.ok
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:29)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 10:44:29)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(07/18/22 10:44:31)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 10:44:31)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(07/18/22 17:50:14)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/18/22 17:50:14)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(07/19/22 14:57:28)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/19/22 14:57:28)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
newtop $list "Used In" "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::frame $list.lf 
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::label $list.lf.l1 -text "Equations using"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::label $list.lf.l2 -style hl.TLabel -text "%s"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
pack $list.lf.l1 $list.lf.l2
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::frame $list.l
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::scrollbar $list.l.v_scroll -command "$list.l.l yview"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::listbox $list.l.l -width 25 -selectmode single -yscroll "$list.l.v_scroll set" -dark $darkTheme
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
pack $list.l.l  $list.l.v_scroll -side left -fill y
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
mouse_wheel $list.l.l
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
bind $list.l.l <Home> "selectinlist $list.l.l 0; break"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
bind $list.l.l <End> "selectinlist $list.l.l end; break"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
ttk::label $list.l3 -justify center -text "(double-click to
observe the element)"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
pack $list.lf $list.l $list.l3 -padx 5 -pady 5 -expand yes -fill both
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
done $list b "destroytop $list"
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
$list.l.l insert end %s
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
bind $list <Double-Button-1> { set bidi [ selection get ]; set done 8; set choice 55 }
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
showtop $list
Message:
can't read "list": no such variable
-----

(07/19/22 14:57:28)
Command:
mousewarpto $list.b.ok
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(07/19/22 14:59:15)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/19/22 14:59:15)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(07/25/22 14:34:37)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
missing operand at _@_
in expression "  _@_eq ".chgelem" "
-----

(07/25/22 14:34:45)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " .chgelem eq ".chgelem" "
-----

(07/25/22 14:34:45)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(07/25/22 14:34:51)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
missing operand at _@_
in expression "  _@_eq ".chgelem" "
-----

(07/25/22 14:37:01)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(07/25/22 14:37:01)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(12/17/22 18:38:33)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(12/17/22 18:38:33)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(12/17/22 18:38:35)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(12/17/22 18:38:35)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----

(12/17/22 18:59:50)
Command:
if { %s eq ".chgelem" } { 			set list .chgelem.listused_%s 		} else { 			set list .listused_%s 		}
Message:
invalid character "."
in expression " . eq ".chgelem" "
-----

(12/17/22 18:59:50)
Command:
set res [ winfo exists "%s" ]
Message:
can't read "list": no such variable
-----


====================> NEW TCL SESSION

(01/17/23 17:39:40)
Command:
FATAL ERROR
Message:
System Signal received: SIGSEGV (Segmentation violation)
-----


====================> NEW TCL SESSION

(09/28/23 15:10:18)
Command:
Invalid Tcl variable name
Message:
Internal LSD error searching for variable 'nodeId'. If the problem persists, please contact developers
-----

(09/28/23 15:10:18)
Command:
Invalid Tcl variable name
Message:
Internal LSD error searching for variable 'nodeLab'. If the problem persists, please contact developers
-----
